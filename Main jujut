local Rayfield = loadstring(game:HttpGet('https://sirius.menu/rayfield'))()


local Window = Rayfield:CreateWindow({
   Name = "Rayfield Example Window",
   LoadingTitle = "Ohmagah!",
   LoadingSubtitle = "by Someone",
   Theme = "Bloom", -- Check https://docs.sirius.menu/rayfield/configuration/themes

   DisableRayfieldPrompts = false,
   DisableBuildWarnings = false, -- Prevents Rayfield from warning when the script has a version mismatch with the interface

   ConfigurationSaving = {
      Enabled = true,
      FolderName = nil, -- Create a custom folder for your hub/game
      FileName = "Big Hub"
   },

   Discord = {
      Enabled = false, -- Prompt the user to join your Discord server if their executor supports it
      Invite = "noinvitelink", -- The Discord invite code, do not include discord.gg/. E.g. discord.gg/ABCD would be ABCD
      RememberJoins = true -- Set this to false to make them join the discord every time they load it up
   },

   KeySystem = true, -- Set this to true to use our key system
   KeySettings = {
      Title = "Sigma hub",
      Subtitle = "Key System",
      Note = "No method of obtaining the key is provided", -- Use this to tell the user how to get a key
      FileName = "Key", -- It is recommended to use something unique as other scripts using Rayfield may overwrite your key file
      SaveKey = true, -- The user's key will be saved, but if you change the key, they will be unable to use your script
      GrabKeyFromSite = false, -- If this is true, set Key below to the RAW site you would like Rayfield to get the key from
      Key = {"sigmahubhype"} -- List of keys that will be accepted by the system, can be RAW file links (pastebin, github etc) or simple strings ("hello","key22")
   }
})


local Tab = Window:CreateTab("yeah", 4483362458) -- Title, Image


local Button = Tab:CreateButton({
   Name = "ClearCd Function",
   Callback = function()
   local args = {
    [1] = {
        [1] = {
            ["Id"] = "ClearCD",
            ["Type"] = "Use",
            ["Target"] = "Thegreat092197"
        },
        [2] = "\12"
    }
}

game:GetService("ReplicatedStorage"):FindFirstChild("ffrostflame_bridgenet2@0.5.6").dataRemoteEvent:FireServer(unpack(args))

   end,
})



local Toggle = Tab:CreateToggle({
   Name = "Toggle Example",
   CurrentValue = false,
   Flag = "Toggle1", -- A flag is the identifier for the configuration file, make sure every element has a different flag if you're using configuration saving to ensure no overlaps
   Callback = function(Value)
local args = {
    [1] = {
        [1] = {
            ["Id"] = "ClearCD",
            ["Type"] = "Use",
            ["Target"] = "Thegreat092197"
        },
        [2] = "\12"
    }
}

game:GetService("ReplicatedStorage"):FindFirstChild("ffrostflame_bridgenet2@0.5.6").dataRemoteEvent:FireServer(unpack(args))

  
   end,
})
